{% import "_includes/forms" as forms %}

{% do view.registerAssetBundle("lukeyouell\\emailvalidator\\assetbundles\\SettingsAsset") %}

<h2 class="first">Providers</h2>

<table class="data fullwidth fixed-layout">
  <tbody>
    <tr>
      <th class="light">Free</th>
      <td id="freeProviderCount">{{ freeProviderCount }}</td>
    </tr>
    <tr>
      <th class="light">Disposable</th>
      <td id="disposableProviderCount">{{ disposableProviderCount }}</td>
    </tr>
    <tr>
      <th class="light">Total</th>
      <td id="totalProviderCount">{{ freeProviderCount + disposableProviderCount }}</td>
    </tr>
  </tbody>
</table>

<div class="buttons">
  <div class="btn submit" id="updateProviders">Update providers</div>
  <div class="spinner hidden" id="updateProvidersSpinner"></div>
</div>

<h2>Settings</h2>

{% macro configWarning(setting) -%}
  {% set setting = '<code>' ~ setting ~ '</code>' %}
  {{ 'This is being overridden by the {setting} config setting in your {file} config file.'|t('email-validator', {
      setting: setting,
      file:    'email-validator.php'
  })|raw }}
{%- endmacro %}

{% from _self import configWarning %}

{{ forms.lightswitchField({
  first:         true,
  label:        'Format Check',
  instructions: 'Perform a standard email format check, verifying it\'s basic compliance.',
  on:           true,
  disabled:     true
}) }}

{{ forms.lightswitchField({
  label:        'Typo Check & Suggestions',
  instructions: 'Provide an alternative email suggestion if a typo is detected in the domain part of the email address.',
  id:           'typoCheck',
  name:         'typoCheck',
  on:           settings.typoCheck,
  disabled:     'typoCheck' in overrides,
  warning:      'typoCheck' in overrides ? configWarning('typoCheck')
}) }}

{{ forms.lightswitchField({
  label:        'MX Records',
  instructions: 'Allow domains that aren\'t configured to receive email.',
  id:           'allowNoMX',
  name:         'allowNoMX',
  on:           settings.allowNoMX,
  disabled:     'allowNoMX' in overrides,
  warning:      'allowNoMX' in overrides ? configWarning('allowNoMX')
}) }}

{{ forms.lightswitchField({
  label:        'Catch All',
  instructions: 'Allow domains that are configured to catch all incoming mail traffic.',
  id:           'allowCatchAll',
  name:         'allowCatchAll',
  on:           settings.allowCatchAll,
  disabled:     'allowCatchAll' in overrides,
  warning:      'allowCatchAll' in overrides ? configWarning('allowCatchAll')
}) }}

{{ forms.lightswitchField({
  label:        'Roles',
  instructions: 'Allow role-based email addresses.',
  id:           'allowRoles',
  name:         'allowRoles',
  on:           settings.allowRoles,
  disabled:     'allowRoles' in overrides,
  warning:      'allowRoles' in overrides ? configWarning('allowRoles')
}) }}

{{ forms.lightswitchField({
  label:        'Free Providers',
  instructions: 'Allow email addresses found to be using a free email provider such as Gmail and Yahoo!.',
  id:           'allowFree',
  name:         'allowFree',
  on:           settings.allowFree,
  disabled:     'allowFree' in overrides,
  warning:      'allowFree' in overrides ? configWarning('allowFree')
}) }}

{{ forms.lightswitchField({
  label:        'Disposable Providers',
  instructions: 'Allow email addresses found to be using a disposable email provider.',
  id:           'allowDisposable',
  name:         'allowDisposable',
  on:           settings.allowDisposable,
  disabled:     'allowDisposable' in overrides,
  warning:      'allowDisposable' in overrides ? configWarning('allowDisposable')
}) }}
</div>
